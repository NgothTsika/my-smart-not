generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  accounts       Account[]
  documents      Document[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], map: "fk_account_user")

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], map: "fk_session_user")

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Document {
  id               String     @id @default(cuid())
  title            String
  userId           String
  isArchived       Boolean    @default(false)
  isPublished      Boolean    @default(false)
  parentDocumentId String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  content          String?    
  coverImage       String?
  icon             String?

  parentDocument   Document?  @relation("ParentChild", fields: [parentDocumentId], references: [id], map: "fk_document_parent")
  children         Document[] @relation("ParentChild")
  user             User       @relation(fields: [userId], references: [id], map: "fk_document_user")

  @@index([userId])
  @@index([userId, parentDocumentId])
  @@index([parentDocumentId])
}
